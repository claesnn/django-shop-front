/* tslint:disable */
/* eslint-disable */
/**
 * Shop Project API
 * Just playing around with Django
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Nested } from './Nested';
import {
    NestedFromJSON,
    NestedFromJSONTyped,
    NestedToJSON,
} from './Nested';

/**
 * 
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {number}
     * @memberof Item
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    price: string;
    /**
     * 
     * @type {string}
     * @memberof Item
     */
    image: string;
    /**
     * 
     * @type {Date}
     * @memberof Item
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Nested}
     * @memberof Item
     */
    readonly category: Nested;
}

/**
 * Check if a given object implements the Item interface.
 */
export function instanceOfItem(value: object): value is Item {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'price': json['price'],
        'image': json['image'],
        'createdAt': (new Date(json['created_at'])),
        'category': NestedFromJSON(json['category']),
    };
}

export function ItemToJSON(value?: Omit<Item, 'id'|'created_at'|'category'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'description': value['description'],
        'price': value['price'],
        'image': value['image'],
    };
}

